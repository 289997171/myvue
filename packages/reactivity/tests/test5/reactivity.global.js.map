{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../src/reactive.ts", "../src/effect.ts"],
  "sourcesContent": ["export {reactive} from './reactive'\r\nexport {effect} from './effect'\r\n", "export const isObject = (val)=> {\r\n    return val !== null && typeof val === 'object'\r\n}\r\n", "import {isObject} from \"@vue/shared\";\r\n\r\n// const enum ReactiveFlag {\r\n//     IS_REACTIVE = '__v_isReactive'\r\n// }\r\n//\r\n// // \u4FDD\u5B58\u4EE5\u53CA\u539F\u59CB\u5BF9\u8C61\u4E0E\u4EE3\u7406\u5BF9\u8C61\u9690\u5C04\r\n// const reactiveMap = new WeakMap() // key\u53EA\u80FD\u662F\u5BF9\u8C61,\u5982\u679Ckey\u6307\u5411\u7684\u5BF9\u8C61\u540E\u9762\u8D4B\u503C\u4E3Anull,\u90A3\u4E48WeakMap\u4F1A\u81EA\u52A8\u5220\u9664,\u5783\u573E\u56DE\u6536\u76F8\u5173\r\n\r\n/**\r\n * \u5C06js\u539F\u59CB\u5BF9\u8C61,\u4F9D\u8D56Proxy\u8F6C\u6362\u6210\u54CD\u5E94\u5F0F\u6570\u636E\r\n * 1.reactive\u53EA\u652F\u6301\u5BF9\u8C61\u7684\u8F6C\u6362\r\n * @param target\r\n */\r\nconst reactive = (target)=> {\r\n    // 1.reactive\u53EA\u652F\u6301\u5BF9\u8C61\u7684\u8F6C\u6362\r\n    if (!isObject(target)) {\r\n        console.error('reactive\u53EA\u652F\u6301\u5BF9\u8C61\u7684\u8F6C\u6362:', target)\r\n        return\r\n    }\r\n\r\n    // // \u5982\u679Ctarget\u662F\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61Proxy,\u76F4\u63A5\u8FD4\u56DE\r\n    // if (target[ReactiveFlag.IS_REACTIVE]) return target;\r\n    //\r\n    // let proxy = reactiveMap.get(target)\r\n    // // \u5224\u65AD\u539F\u59CB\u5BF9\u8C61\u662F\u5426\u5DF2\u7ECF\u521B\u5EFA\u8FC7\u5BF9\u5E94\u7684\u4EE3\u7406\u5BF9\u8C61\r\n    // if (proxy) return proxy;\r\n\r\n    const proxy = new Proxy(target, {\r\n        get(target: any, p: string | symbol, receiver: any): any {\r\n            //return target[p]\r\n            return Reflect.get(target, p, receiver);\r\n        },\r\n        set(target: any, p: string | symbol, value: any, receiver: any): boolean {\r\n            // target[p] = value;\r\n            // return true;\r\n            return Reflect.set(target, p, value, receiver)\r\n        }\r\n    })\r\n\r\n    return proxy\r\n}\r\n\r\nexport {reactive}\r\n", "const effect = (val)=> {\r\n\r\n}\r\n\r\nexport {effect}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,MAAM,WAAW,CAAC,QAAO;AAC5B,WAAO,QAAQ,QAAQ,OAAO,QAAQ;AAAA,EAC1C;;;ACYA,MAAM,WAAW,CAAC,WAAU;AAExB,QAAI,CAAC,SAAS,MAAM,GAAG;AACnB,cAAQ,MAAM,6DAAqB,MAAM;AACzC;AAAA,IACJ;AASA,UAAM,QAAQ,IAAI,MAAM,QAAQ;AAAA,MAC5B,IAAIA,SAAa,GAAoB,UAAoB;AAErD,eAAO,QAAQ,IAAIA,SAAQ,GAAG,QAAQ;AAAA,MAC1C;AAAA,MACA,IAAIA,SAAa,GAAoB,OAAY,UAAwB;AAGrE,eAAO,QAAQ,IAAIA,SAAQ,GAAG,OAAO,QAAQ;AAAA,MACjD;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;;;ACzCA,MAAM,SAAS,CAAC,QAAO;AAAA,EAEvB;",
  "names": ["target"]
}
